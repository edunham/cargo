language: rust
sudo: required
services:
  - docker

install:
  - curl https://static.rust-lang.org/rustup.sh | sh -s -- --add-target=$TARGET --disable-sudo -y --prefix=`rustc --print sysroot`

script:
  - ./configure --prefix=$HOME/cargo-install --disable-cross-tests --disable-optimize --target=$TARGET
  - make
  - make test
  - make distcheck
  - make doc
  - make install
  - make uninstall
after_success: |
  [ $TRAVIS_BRANCH = master ] &&
  [ $TRAVIS_PULL_REQUEST = false ] &&
  [ $(uname -s) = Linux ] &&
  pip install ghp-import --user $USER &&
  $HOME/.local/bin/ghp-import -n target/doc &&
  git push -qf https://${TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git gh-pages
env:
  global:
    # apparently we use too much memory and if there's more than one rustc then
    # when compiling Cargo's unit tests some compilers will be randomly kill
    # -9'd
    - CARGOFLAGS=-j1
    - secure: scGpeetUfba5RWyuS4yt10bPoFAI9wpHEReIFqEx7eH5vr2Anajk6+70jW6GdrWVdUvdINiArlQ3An2DeB9vEUWcBjw8WvuPtOH0tDMoSsuVloPlFD8yn1Ac0Bx9getAO5ofxqtoNg+OV4MDVuGabEesqAOWqURNrBC7XK+ntC8=

matrix:
  include:
    # OSX is only 32 and 64 stable
    - os: osx
      rust: stable
      before_install:
        - export OPENSSL_INCLUDE_DIR=`brew --prefix openssl`/include
        - export OPENSSL_LIB_DIR=`brew --prefix openssl`/lib
      env: TARGET=x86_64-apple-darwin
    - os: osx
      rust: stable
      before_install:
        - export OPENSSL_INCLUDE_DIR=`brew --prefix openssl`/include
        - export OPENSSL_LIB_DIR=`brew --prefix openssl`/lib
      env: TARGET=i686-apple-darwin
    # Linux tests stable on 32 and stable,beta,nightly on 64
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: stable
    - env: TARGET=i686-unknown-linux-gnu
      rust: stable
      addons:
        apt:
          packages:
            - gcc-multilib
            - libssl-dev:i386
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: beta
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    # Crosses test only on stable
    - env: TARGET=arm-unknown-linux-gnueabi
      rust: stable
      addons:
        apt:
          packages:
            - gcc-arm-linux-gnueabi
    - env: TARGET=arm-unknown-linux-gnueabihf
      rust: stable
      addons:
        apt:
          packages:
            - gcc-arm-linux-gnueabihf
    - env: TARGET=armv7-unknown-linux-gnueabihf
      rust: stable
      addons:
        apt:
          packages:
            - gcc-arm-linux-gnueabihf
    - env: TARGET=aarch64-unknown-linux-gnu
      rust: stable
      addons:
        apt:
          packages:
            - gcc-aarch64-linux-gnu
    - env: TARGET=x86_64-unknown-freebsd
      rust: stable
      script:
        - sh ci/run-docker.sh $TARGET
    - env: TARGET=x86_64-unknown-netbsd
      rust: stable
      script:
        - sh ci/run-docker.sh $TARGET

branches:
  only:
    - master

addons:
  apt:
    sources:
      - kalakris-cmake
    packages:
      - cmake
